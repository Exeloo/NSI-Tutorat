rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isUser() {
      let regex = '.*@pedagogiefde[.]org';
      return request.auth != null && request.auth.token.email.matches(regex);
    }
    function isConcernUser(id) {
      return isUser() && request.auth.uid == id
    }
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    function isConcernAdmin(id) {
      return isAdmin() && request.auth.uid == id
    }
    function hasUser() {
    	return isUser() && request.auth.uid in resource.data.entrants
    }
    
    match /users/{userId} {
      allow read, create, update, delete: if isConcernUser(userId) || isAdmin();
    }
    match /subjects {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }
    match /classLevels {
      allow read: if isUser();
      allow read, create, update, delete: if isAdmin();
    }
    match /publicUsers/{userId} {
      allow read: if isUser();
      allow read, create, update: if isConcernUser(userId) || isAdmin();
    }
    match /admins/{userId} {
      allow read, create: if isAdmin();
      allow update, delete: if isConcernAdmin(userId)
    }
    match /conversations/{convId} {
    	allow read, create, update: if hasUser()
    }
    match /conversations/{convId}/messages {
      allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(convId)).data.entrants
    }
  }
}
